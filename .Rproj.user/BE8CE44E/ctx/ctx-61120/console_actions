{
    "type": [
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2
    ],
    "data": [
        "data$est_time <- strip_data(data$est_time)",
        "> ",
        "data$est_time <- avg_range(data$est_time)",
        "> ",
        "data <- data %>% mutate(est_time = as.numeric(est_time))",
        "> ",
        "",
        "> ",
        "data$est_distance <- sub('or', '-', data$est_distance)",
        "> ",
        "data$est_distance <- strip_data(data$est_distance)",
        "> ",
        "data$est_distance <- avg_range(data$est_distance)",
        "> ",
        "data <- data %>% mutate(est_distance = as.numeric(est_distance))",
        "> ",
        "",
        "> ",
        "data$est_cost <- sub('/', '-', data$est_cost)",
        "> ",
        "cents = c('cents')",
        "> ",
        "data$est_cost <- scale_data(data$est_cost, cents, 0.01)",
        "> ",
        "data$est_cost <- strip_data(data$est_cost)",
        "> ",
        "data$est_cost <- avg_range(data$est_cost)",
        "> ",
        "data <- data %>% mutate(est_cost = as.numeric(est_cost))",
        "> ",
        "data[4]",
        "   est_cost\n1       3.0\n2       5.0\n3       0.8\n4       3.0\n5       1.5\n6       6.0\n7       2.0\n8       5.0\n9       3.0\n10      6.0\n11      4.0\n12      5.0\n13      2.0\n14      6.0\n15      5.0\n16      5.0\n17      5.0\n18      2.0\n19      5.0\n20      3.0\n21     10.0\n22      4.5\n23      2.5\n24      0.0\n25      2.0\n26      7.0\n27      5.0\n28      5.0\n29      7.0\n30      1.0\n31       NA\n32     10.0\n33      5.0\n34      3.0\n35     15.0\n36      3.0\n37     10.0\n38      5.0\n39      5.0\n40     25.0\n41      5.0\n42      5.0",
        "\n43     10.0\n44     12.5\n45      5.0\n46      4.0\n47      4.0\n48      6.0\n49     10.0\n50      6.0\n51      5.0\n52      5.0\n53      5.0\n54     10.0\n55     10.0\n56     12.0\n57      3.0\n58      5.0\n59      2.0\n60      5.0\n61      1.0\n62     10.0\n63     15.0\n64      2.0\n65     10.0\n66      6.0\n67      2.0\n68     10.0\n69      6.0\n70      7.0\n71      4.0\n72     10.0\n",
        "> ",
        "data[5]",
        "   est_transport\n1    Bus / Coach\n2    Bus / Coach\n3            Car\n4           Walk\n5    Bus / Coach\n6    Bus / Coach\n7    Bus / Coach\n8           Walk\n9           Walk\n10   Bus / Coach\n11   Bus / Coach\n12   Bus / Coach\n13          Walk\n14          Walk\n15   Bus / Coach\n16          Walk\n17   Bus / Coach\n18   Bus / Coach\n19   Bus / Coach\n20          Walk\n21          Walk\n22   Bus / Coach\n23          Walk\n24          Walk\n25          Walk\n26   Bus / Coach\n27          Walk\n28   Bus / Coach\n29   Bus / Coach\n30",
        "          Walk\n31          Walk\n32   Bus / Coach\n33          Bike\n34          Walk\n35           Car\n36          Walk\n37           Car\n38          Walk\n39           Car\n40          Walk\n41          Walk\n42          Walk\n43          Walk\n44           Car\n45   Bus / Coach\n46   Bus / Coach\n47   Bus / Coach\n48          Walk\n49   Bus / Coach\n50   Bus / Coach\n51          Walk\n52          Walk\n53           Car\n54   Bus / Coach\n55   Bus / Coach\n56   Bus / Coach\n57          Walk\n58   Bus / Coach\n59   Bus / Coach\n60   Bus / Coach",
        "\n61          Walk\n62   Bus / Coach\n63   Bus / Coach\n64          Walk\n65   Bus / Coach\n66   Bus / Coach\n67   Bus / Coach\n68          Walk\n69          Walk\n70          Walk\n71   Bus / Coach\n72          Walk\n",
        "> ",
        "data[6]",
        "       year_group\n1               4\n2               3\n3               3\n4               3\n5               3\n6               2\n7               4\n8               3\n9               3\n10              4\n11              4\n12              4\n13              3\n14              4\n15              4\n16              4\n17              4\n18       Master's\n19              4\n20              4\n21              4\n22              3\n23              3\n24              4\n25              4\n26              3\n27              2\n28              3",
        "\n29              3\n30              4\n31              3\n32              1\n33              3\n34              3\n35              3\n36              2\n37              4\n38              4\n39              4\n40              4\n41              3\n42              3\n43              3\n44              4\n45              3\n46              3\n47              4\n48 Higher Diploma\n49              4\n50              3\n51              4\n52              3\n53              4\n54              4\n55 Higher Diploma\n56              3\n57              3",
        "\n58              3\n59              4\n60              4\n61              4\n62              3\n63              4\n64              2\n65              2\n66       Master's\n67              4\n68              4\n69              4\n70              4\n71              4\n72       Master's\n",
        "> ",
        "data[7]",
        "                                  time\n1                                   10\n2                                   15\n3                                   25\n4                           5 Minutes \n5                                   20\n6                                   10\n7                                   10\n8                           25 minutes\n9                                    3\n10                                  40\n11                                  20\n12                                  20\n13                                  25",
        "\n14                                  10\n15                                  20\n16                                  20\n17                                  80\n18                                  30\n19                                  25\n20                                   6\n21                                   5\n22                                   3\n23                                  15\n24                                  10\n25                                  10\n26                              30mins\n27                                  15",
        "\n28                                   8\n29                                  15\n30                                   5\n31                         10 minutes \n32                                  30\n33 15 minutes to arts science building\n34                                  30\n35                              15min \n36                               15min\n37                          40 minutes\n38                                  20\n39                                  20\n40                                  80\n41                                  15",
        "\n42                                  10\n43                                  25\n44                                  40\n45                                  10\n46                                   4\n47                               60min\n48                           15minutes\n49                                  60\n50                          12 minutes\n51                                  35\n52                   1 hour 40 minutes\n53                                  10\n54                                  60\n55                                  20",
        "\n56                                  95\n57                                  15\n58                             10 mins\n59                                  15\n60                                  60\n61                                   5\n62                                  10\n63                         20 minutes \n64                                  15\n65                                  25\n66                                  30\n67                                  14\n68                                  10\n69                                  65",
        "\n70                              20mins\n71                                  50\n72                                  22\n",
        "> ",
        "data <- read.csv('data.csv')",
        "> ",
        "",
        "> ",
        "# est = estimated",
        "> ",
        "new_names = c('timestamp', 'est_time', 'est_distance', 'est_cost', 'est_transport', 'year_group', 'time', 'start_time', 'distance', 'cost', 'transport', 'origin')",
        "> ",
        "colnames(data) <- new_names",
        "> ",
        "data <- data %>% mutate(timestamp = as.Date(timestamp))",
        "> ",
        "data <- data %>% mutate(day = weekdays(timestamp))",
        "> ",
        "",
        "> ",
        "data$est_time <- sub('to', '-', data$est_time)",
        "> ",
        "data$est_time <- sub('half an hour', '30', data$est_time)",
        "> ",
        "hours = c('hours', 'hrs')",
        "> ",
        "data$est_time <- scale_and_avg_range(data$est_time, hours, 60)",
        "> ",
        "data$est_time <- strip_data(data$est_time)",
        "> ",
        "data$est_time <- avg_range(data$est_time)",
        "> ",
        "data <- data %>% mutate(est_time = as.numeric(est_time))",
        "> ",
        "",
        "> ",
        "data$est_distance <- sub('or', '-', data$est_distance)",
        "> ",
        "data$est_distance <- strip_data(data$est_distance)",
        "> ",
        "data$est_distance <- avg_range(data$est_distance)",
        "> ",
        "data <- data %>% mutate(est_distance = as.numeric(est_distance))",
        "Warning message:\n",
        "\u001B[38;5;232mProblem while computing `est_distance = as.numeric(est_distance)`.\n\u001B[36mℹ\u001B[38;5;232m NAs introduced by coercion\u001B[39m \n",
        "> ",
        "",
        "> ",
        "data$est_cost <- sub('/', '-', data$est_cost)",
        "> ",
        "cents = c('cents')",
        "> ",
        "data$est_cost <- scale_data(data$est_cost, cents, 0.01)",
        "> ",
        "data$est_cost <- strip_data(data$est_cost)",
        "> ",
        "data$est_cost <- avg_range(data$est_cost)",
        "> ",
        "data <- data %>% mutate(est_cost = as.numeric(est_cost))",
        "> ",
        "",
        "> ",
        "data$time <- strip_data(data$time)",
        "> ",
        "data <- data %>% mutate(time = as.numeric(time))",
        "> ",
        "data[7]",
        "   time\n1    10\n2    15\n3    25\n4     5\n5    20\n6    10\n7    10\n8    25\n9     3\n10   40\n11   20\n12   20\n13   25\n14   10\n15   20\n16   20\n17   80\n18   30\n19   25\n20    6\n21    5\n22    3\n23   15\n24   10\n25   10\n26   30\n27   15\n28    8\n29   15\n30    5\n31   10\n32   30\n33   15\n34   30\n35   15\n36   15\n37   40\n38   20\n39   20\n40   80\n41   15\n42   10\n43   25\n44   40\n45   10\n46    4\n47   60\n48   15\n49   60\n50   12\n51   35\n52  140\n53   10\n54   60\n55   20\n56   95\n57   15\n58   10\n59   15\n60   60\n61    5\n62   10\n63   20\n64",
        "   15\n65   25\n66   30\n67   14\n68   10\n69   65\n70   20\n71   50\n72   22\n",
        "> ",
        "data[8]",
        "   start_time\n1       12:45\n2       13:40\n3       11:00\n4       02:50\n5       11:45\n6       11:00\n7       12:55\n8       07:35\n9       08:50\n10      07:30\n11      11:00\n12      10:20\n13      14:30\n14      08:50\n15      09:40\n16      11:00\n17      07:50\n18      09:00\n19      09:00\n20      12:30\n21      10:40\n22      09:27\n23      14:30\n24      10:00\n25      10:15\n26      08:30\n27      08:30\n28      10:45\n29      00:40\n30      10:54\n31      09:00\n32      07:30\n33      10:45\n34      10:30\n35      10:00\n36      10:45",
        "\n37      10:00\n38      10:15\n39      10:30\n40      08:00\n41      10:30\n42      11:40\n43      12:40\n44      11:30\n45      13:15\n46      13:45\n47      08:30\n48      08:30\n49      07:00\n50      10:10\n51      10:30\n52      07:05\n53      09:02\n54      08:05\n55      13:30\n56      08:30\n57      11:15\n58      11:00\n59      08:00\n60      12:25\n61      10:50\n62      09:43\n63      09:45\n64      10:35\n65      08:30\n66      10:05\n67      09:45\n68      09:00\n69      07:50\n70      08:00\n71      11:00\n72      10:13\n",
        "> ",
        "?`date-time`",
        "> ",
        "data <- data %>% mutate(start_time = as.POSIXct(start_time))",
        "\u001B[1m\u001B[33mError\u001B[39m in `mutate()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m Problem while computing `start_time =\n  as.POSIXct(start_time)`.\u001B[39m\n\u001B[1mCaused by error in `as.POSIXlt.character()`:\u001B[22m\n\u001B[33m!\u001B[39m character string is not in a standard unambiguous format\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_error()\u0007rlang::last_error()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "data$start_time",
        " [1] \"12:45\" \"13:40\" \"11:00\" \"02:50\" \"11:45\" \"11:00\" \"12:55\" \"07:35\"\n [9] \"08:50\" \"07:30\" \"11:00\" \"10:20\" \"14:30\" \"08:50\" \"09:40\" \"11:00\"\n[17] \"07:50\" \"09:00\" \"09:00\" \"12:30\" \"10:40\" \"09:27\" \"14:30\" \"10:00\"\n[25] \"10:15\" \"08:30\" \"08:30\" \"10:45\" \"00:40\" \"10:54\" \"09:00\" \"07:30\"\n[33] \"10:45\" \"10:30\" \"10:00\" \"10:45\" \"10:00\" \"10:15\" \"10:30\" \"08:00\"\n[41] \"10:30\" \"11:40\" \"12:40\" \"11:30\" \"13:15\" \"13:45\" \"08:30\" \"08:30\"\n[49] \"07:00\" \"10:10\" \"10:30\" \"07:05\" \"09:02\" \"08:05\" \"13:30\" \"08:30\"\n[57] \"11:15\" \"11:00\" \"08:00\" \"12:25\"",
        " \"10:50\" \"09:43\" \"09:45\" \"10:35\"\n[65] \"08:30\" \"10:05\" \"09:45\" \"09:00\" \"07:50\" \"08:00\" \"11:00\" \"10:13\"\n",
        "> ",
        "# data$start_time <- if_else(data$start_time < 03:00, data$start_time + 12)",
        "> ",
        "data <- data %>% mutate(start_time = as.POSIXct(start_time, format='%H:%M:'))",
        "> ",
        "data$start_time",
        " [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA\n[23] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA\n[45] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA\n[67] NA NA NA NA NA NA\n",
        "> ",
        "# data$start_time <- if_else(data$start_time < 03:00, data$start_time + 12)",
        "> ",
        "knitr::opts_chunk$set(echo = TRUE)",
        "> ",
        "install.packages(dplyr)",
        "Error in install.packages : object 'dplyr' not found\n",
        "> ",
        "install.stringr",
        "Error: object 'install.stringr' not found\n",
        "> ",
        "library(stringr)",
        "> ",
        "library(dplyr)",
        "> ",
        "data <- read.csv('data.csv')",
        "> ",
        "",
        "> ",
        "# est = estimated",
        "> ",
        "new_names = c('timestamp', 'est_time', 'est_distance', 'est_cost', 'est_transport', 'year_group', 'time', 'start_time', 'distance', 'cost', 'transport', 'origin')",
        "> ",
        "colnames(data) <- new_names",
        "> ",
        "data <- data %>% mutate(start_time = as.POSIXct(start_time, format='%H:%M'))",
        "> ",
        "data$start_time",
        " [1] \"2022-11-26 12:45:00 GMT\" \"2022-11-26 13:40:00 GMT\"\n [3] \"2022-11-26 11:00:00 GMT\" \"2022-11-26 02:50:00 GMT\"\n [5] \"2022-11-26 11:45:00 GMT\" \"2022-11-26 11:00:00 GMT\"\n [7] \"2022-11-26 12:55:00 GMT\" \"2022-11-26 07:35:00 GMT\"\n [9] \"2022-11-26 08:50:00 GMT\" \"2022-11-26 07:30:00 GMT\"\n[11] \"2022-11-26 11:00:00 GMT\" \"2022-11-26 10:20:00 GMT\"\n[13] \"2022-11-26 14:30:00 GMT\" \"2022-11-26 08:50:00 GMT\"\n[15] \"2022-11-26 09:40:00 GMT\" \"2022-11-26 11:00:00 GMT\"\n[17] \"2022-11-26 07:50:00 GMT\" \"2022-11-26 09:00:00 GMT\"",
        "\n[19] \"2022-11-26 09:00:00 GMT\" \"2022-11-26 12:30:00 GMT\"\n[21] \"2022-11-26 10:40:00 GMT\" \"2022-11-26 09:27:00 GMT\"\n[23] \"2022-11-26 14:30:00 GMT\" \"2022-11-26 10:00:00 GMT\"\n[25] \"2022-11-26 10:15:00 GMT\" \"2022-11-26 08:30:00 GMT\"\n[27] \"2022-11-26 08:30:00 GMT\" \"2022-11-26 10:45:00 GMT\"\n[29] \"2022-11-26 00:40:00 GMT\" \"2022-11-26 10:54:00 GMT\"\n[31] \"2022-11-26 09:00:00 GMT\" \"2022-11-26 07:30:00 GMT\"\n[33] \"2022-11-26 10:45:00 GMT\" \"2022-11-26 10:30:00 GMT\"\n[35] \"2022-11-26 10:00:00 GMT\" \"2022-11-26 10:45:00 GMT\"",
        "\n[37] \"2022-11-26 10:00:00 GMT\" \"2022-11-26 10:15:00 GMT\"\n[39] \"2022-11-26 10:30:00 GMT\" \"2022-11-26 08:00:00 GMT\"\n[41] \"2022-11-26 10:30:00 GMT\" \"2022-11-26 11:40:00 GMT\"\n[43] \"2022-11-26 12:40:00 GMT\" \"2022-11-26 11:30:00 GMT\"\n[45] \"2022-11-26 13:15:00 GMT\" \"2022-11-26 13:45:00 GMT\"\n[47] \"2022-11-26 08:30:00 GMT\" \"2022-11-26 08:30:00 GMT\"\n[49] \"2022-11-26 07:00:00 GMT\" \"2022-11-26 10:10:00 GMT\"\n[51] \"2022-11-26 10:30:00 GMT\" \"2022-11-26 07:05:00 GMT\"\n[53] \"2022-11-26 09:02:00 GMT\" \"2022-11-26 08:05:00 GMT\"",
        "\n[55] \"2022-11-26 13:30:00 GMT\" \"2022-11-26 08:30:00 GMT\"\n[57] \"2022-11-26 11:15:00 GMT\" \"2022-11-26 11:00:00 GMT\"\n[59] \"2022-11-26 08:00:00 GMT\" \"2022-11-26 12:25:00 GMT\"\n[61] \"2022-11-26 10:50:00 GMT\" \"2022-11-26 09:43:00 GMT\"\n[63] \"2022-11-26 09:45:00 GMT\" \"2022-11-26 10:35:00 GMT\"\n[65] \"2022-11-26 08:30:00 GMT\" \"2022-11-26 10:05:00 GMT\"\n[67] \"2022-11-26 09:45:00 GMT\" \"2022-11-26 09:00:00 GMT\"\n[69] \"2022-11-26 07:50:00 GMT\" \"2022-11-26 08:00:00 GMT\"\n[71] \"2022-11-26 11:00:00 GMT\" \"2022-11-26 10:13:00 GMT\"",
        "\n",
        "> ",
        "# data$start_time <- if_else(data$start_time < 03:00, data$start_time + 12)",
        "> ",
        "data <- data %>% mutate(start_time = format(as.POSIXct(start_time, format='%H:%M'), '%H:%M')",
        "+ ",
        "data$start_time",
        "Error: unexpected symbol in:\n\"data <- data %>% mutate(start_time = format(as.POSIXct(start_time, format='%H:%M'), '%H:%M')\ndata\"\n",
        "> ",
        "# data$start_time <- if_else(data$start_time < 03:00, data$start_time + 12)",
        "> ",
        "data <- read.csv('data.csv')",
        "> ",
        "",
        "> ",
        "# est = estimated",
        "> ",
        "new_names = c('timestamp', 'est_time', 'est_distance', 'est_cost', 'est_transport', 'year_group', 'time', 'start_time', 'distance', 'cost', 'transport', 'origin')",
        "> ",
        "colnames(data) <- new_names",
        "> ",
        "data <- data %>% mutate(start_time = format(as.POSIXct(start_time, format='%H:%M'), '%H:%M')",
        "+ ",
        "data$start_time",
        "Error: unexpected symbol in:\n\"data <- data %>% mutate(start_time = format(as.POSIXct(start_time, format='%H:%M'), '%H:%M')\ndata\"\n",
        "> ",
        "# data$start_time <- if_else(data$start_time < 03:00, data$start_time + 12)",
        "> ",
        "data <- data %>% mutate(start_time = format(as.POSIXct(start_time, format='%H:%M'), '%H:%M'))",
        "> ",
        "data$start_time",
        " [1] \"12:45\" \"13:40\" \"11:00\" \"02:50\" \"11:45\" \"11:00\" \"12:55\" \"07:35\"\n [9] \"08:50\" \"07:30\" \"11:00\" \"10:20\" \"14:30\" \"08:50\" \"09:40\" \"11:00\"\n[17] \"07:50\" \"09:00\" \"09:00\" \"12:30\" \"10:40\" \"09:27\" \"14:30\" \"10:00\"\n[25] \"10:15\" \"08:30\" \"08:30\" \"10:45\" \"00:40\" \"10:54\" \"09:00\" \"07:30\"\n[33] \"10:45\" \"10:30\" \"10:00\" \"10:45\" \"10:00\" \"10:15\" \"10:30\" \"08:00\"\n[41] \"10:30\" \"11:40\" \"12:40\" \"11:30\" \"13:15\" \"13:45\" \"08:30\" \"08:30\"\n[49] \"07:00\" \"10:10\" \"10:30\" \"07:05\" \"09:02\" \"08:05\" \"13:30\" \"08:30\"\n[57] \"11:15\" \"11:00\" \"08:00\" \"12:25\"",
        " \"10:50\" \"09:43\" \"09:45\" \"10:35\"\n[65] \"08:30\" \"10:05\" \"09:45\" \"09:00\" \"07:50\" \"08:00\" \"11:00\" \"10:13\"\n",
        "> ",
        "# data$start_time <- if_else(data$start_time < 03:00, data$start_time + 12)",
        "> ",
        "data[7]",
        "                                  time\n1                                   10\n2                                   15\n3                                   25\n4                           5 Minutes \n5                                   20\n6                                   10\n7                                   10\n8                           25 minutes\n9                                    3\n10                                  40\n11                                  20\n12                                  20\n13                                  25",
        "\n14                                  10\n15                                  20\n16                                  20\n17                                  80\n18                                  30\n19                                  25\n20                                   6\n21                                   5\n22                                   3\n23                                  15\n24                                  10\n25                                  10\n26                              30mins\n27                                  15",
        "\n28                                   8\n29                                  15\n30                                   5\n31                         10 minutes \n32                                  30\n33 15 minutes to arts science building\n34                                  30\n35                              15min \n36                               15min\n37                          40 minutes\n38                                  20\n39                                  20\n40                                  80\n41                                  15",
        "\n42                                  10\n43                                  25\n44                                  40\n45                                  10\n46                                   4\n47                               60min\n48                           15minutes\n49                                  60\n50                          12 minutes\n51                                  35\n52                   1 hour 40 minutes\n53                                  10\n54                                  60\n55                                  20",
        "\n56                                  95\n57                                  15\n58                             10 mins\n59                                  15\n60                                  60\n61                                   5\n62                                  10\n63                         20 minutes \n64                                  15\n65                                  25\n66                                  30\n67                                  14\n68                                  10\n69                                  65",
        "\n70                              20mins\n71                                  50\n72                                  22\n",
        "> ",
        "data[6]",
        "       year_group\n1               4\n2               3\n3               3\n4               3\n5               3\n6               2\n7               4\n8               3\n9               3\n10              4\n11              4\n12              4\n13              3\n14              4\n15              4\n16              4\n17              4\n18       Master's\n19              4\n20              4\n21              4\n22              3\n23              3\n24              4\n25              4\n26              3\n27              2\n28              3",
        "\n29              3\n30              4\n31              3\n32              1\n33              3\n34              3\n35              3\n36              2\n37              4\n38              4\n39              4\n40              4\n41              3\n42              3\n43              3\n44              4\n45              3\n46              3\n47              4\n48 Higher Diploma\n49              4\n50              3\n51              4\n52              3\n53              4\n54              4\n55 Higher Diploma\n56              3\n57              3",
        "\n58              3\n59              4\n60              4\n61              4\n62              3\n63              4\n64              2\n65              2\n66       Master's\n67              4\n68              4\n69              4\n70              4\n71              4\n72       Master's\n",
        "> ",
        "data[7]",
        "                                  time\n1                                   10\n2                                   15\n3                                   25\n4                           5 Minutes \n5                                   20\n6                                   10\n7                                   10\n8                           25 minutes\n9                                    3\n10                                  40\n11                                  20\n12                                  20\n13                                  25",
        "\n14                                  10\n15                                  20\n16                                  20\n17                                  80\n18                                  30\n19                                  25\n20                                   6\n21                                   5\n22                                   3\n23                                  15\n24                                  10\n25                                  10\n26                              30mins\n27                                  15",
        "\n28                                   8\n29                                  15\n30                                   5\n31                         10 minutes \n32                                  30\n33 15 minutes to arts science building\n34                                  30\n35                              15min \n36                               15min\n37                          40 minutes\n38                                  20\n39                                  20\n40                                  80\n41                                  15",
        "\n42                                  10\n43                                  25\n44                                  40\n45                                  10\n46                                   4\n47                               60min\n48                           15minutes\n49                                  60\n50                          12 minutes\n51                                  35\n52                   1 hour 40 minutes\n53                                  10\n54                                  60\n55                                  20",
        "\n56                                  95\n57                                  15\n58                             10 mins\n59                                  15\n60                                  60\n61                                   5\n62                                  10\n63                         20 minutes \n64                                  15\n65                                  25\n66                                  30\n67                                  14\n68                                  10\n69                                  65",
        "\n70                              20mins\n71                                  50\n72                                  22\n",
        "> ",
        "knitr::opts_chunk$set(echo = TRUE)",
        "> ",
        "install.packages(dplyr)",
        "Error in install.packages : object 'dplyr' not found\n",
        "> ",
        "install.stringr",
        "Error: object 'install.stringr' not found\n",
        "> ",
        "library(stringr)",
        "> ",
        "library(dplyr)",
        "> ",
        "data <- read.csv('data.csv')",
        "> ",
        "",
        "> ",
        "# est = estimated",
        "> ",
        "new_names = c('timestamp', 'est_time', 'est_distance', 'est_cost', 'est_transport', 'year_group', 'time', 'start_time', 'distance', 'cost', 'transport', 'origin')",
        "> ",
        "colnames(data) <- new_names",
        "> ",
        "strip_data <- function(column) {",
        "+ ",
        "  matcher = \"[^0-9.-]\"",
        "+ ",
        "  cond <- grepl(matcher, column)",
        "+ ",
        "  stripped_rows = str_remove_all(column[cond], matcher)",
        "+ ",
        "  column[cond] <- stripped_rows",
        "+ ",
        "  return(column)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "scale_data <- function(column, to_match, scale) {",
        "+ ",
        "  matcher = paste(to_match, collapse='|')",
        "+ ",
        "  cond = grepl(matcher, column)",
        "+ ",
        "  stripped_rows = str_remove_all(column[cond], \"[^0-9.-]\")",
        "+ ",
        "  stripped_rows = as.numeric(stripped_rows)",
        "+ ",
        "  column[cond] <- stripped_rows * scale",
        "+ ",
        "  return(column)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "avg_range <- function(column) {",
        "+ ",
        "  matcher = '^(\\\\d+)-(\\\\d+)$'",
        "+ ",
        "  cond <- grepl(matcher, column)",
        "+ ",
        "  column[cond] <- rowMeans(read.table(text = column[cond],",
        "+ ",
        "     sep = '-', header = FALSE), na.rm = TRUE)",
        "+ ",
        "  return(column)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "scale_and_avg_range <- function(column, to_match, scale) {",
        "+ ",
        "  matcher = paste(to_match, collapse='|')",
        "+ ",
        "  cond = grepl(matcher, column)",
        "+ ",
        "  stripped_rows = str_remove_all(column[cond], to_match)",
        "+ ",
        "  table = read.table(text=stripped_rows, sep='-', header=FALSE) * scale",
        "+ ",
        "  column[cond] <- rowMeans(temp_table, na.rm=TRUE)",
        "+ ",
        "  return(column)",
        "+ ",
        "}",
        "> ",
        "data <- data %>% mutate(timestamp = as.Date(timestamp))",
        "> ",
        "data <- data %>% mutate(day = weekdays(timestamp))",
        "> ",
        "",
        "> ",
        "data$est_time <- sub('to', '-', data$est_time)",
        "> ",
        "data$est_time <- sub('half an hour', '30', data$est_time)",
        "> ",
        "hours = c('hours', 'hrs')",
        "> ",
        "data$est_time <- scale_and_avg_range(data$est_time, hours, 60)",
        "> ",
        "data$est_time <- strip_data(data$est_time)",
        "> ",
        "data$est_time <- avg_range(data$est_time)",
        "> ",
        "data <- data %>% mutate(est_time = as.numeric(est_time))",
        "> ",
        "",
        "> ",
        "data$est_distance <- sub('or', '-', data$est_distance)",
        "> ",
        "data$est_distance <- strip_data(data$est_distance)",
        "> ",
        "data$est_distance <- avg_range(data$est_distance)",
        "> ",
        "data <- data %>% mutate(est_distance = as.numeric(est_distance))",
        "Warning message:\n",
        "\u001B[38;5;232mProblem while computing `est_distance = as.numeric(est_distance)`.\n\u001B[36mℹ\u001B[38;5;232m NAs introduced by coercion\u001B[39m \n",
        "> ",
        "",
        "> ",
        "data$est_cost <- sub('/', '-', data$est_cost)",
        "> ",
        "cents = c('cents')",
        "> ",
        "data$est_cost <- scale_data(data$est_cost, cents, 0.01)",
        "> ",
        "data$est_cost <- strip_data(data$est_cost)",
        "> ",
        "data$est_cost <- avg_range(data$est_cost)",
        "> ",
        "data <- data %>% mutate(est_cost = as.numeric(est_cost))",
        "> ",
        "",
        "> ",
        "data$time <- strip_data(data$time)",
        "> ",
        "data <- data %>% mutate(time = as.numeric(time))",
        "> ",
        "",
        "> ",
        "data <- data %>% mutate(start_time = format(as.POSIXct(start_time, format='%H:%M'), '%H:%M'))",
        "> ",
        "data[7]",
        "   time\n1    10\n2    15\n3    25\n4     5\n5    20\n6    10\n7    10\n8    25\n9     3\n10   40\n11   20\n12   20\n13   25\n14   10\n15   20\n16   20\n17   80\n18   30\n19   25\n20    6\n21    5\n22    3\n23   15\n24   10\n25   10\n26   30\n27   15\n28    8\n29   15\n30    5\n31   10\n32   30\n33   15\n34   30\n35   15\n36   15\n37   40\n38   20\n39   20\n40   80\n41   15\n42   10\n43   25\n44   40\n45   10\n46    4\n47   60\n48   15\n49   60\n50   12\n51   35\n52  140\n53   10\n54   60\n55   20\n56   95\n57   15\n58   10\n59   15\n60   60\n61    5\n62   10\n63   20\n64",
        "   15\n65   25\n66   30\n67   14\n68   10\n69   65\n70   20\n71   50\n72   22\n",
        "> ",
        "data[8]",
        "   start_time\n1       12:45\n2       13:40\n3       11:00\n4       02:50\n5       11:45\n6       11:00\n7       12:55\n8       07:35\n9       08:50\n10      07:30\n11      11:00\n12      10:20\n13      14:30\n14      08:50\n15      09:40\n16      11:00\n17      07:50\n18      09:00\n19      09:00\n20      12:30\n21      10:40\n22      09:27\n23      14:30\n24      10:00\n25      10:15\n26      08:30\n27      08:30\n28      10:45\n29      00:40\n30      10:54\n31      09:00\n32      07:30\n33      10:45\n34      10:30\n35      10:00\n36      10:45",
        "\n37      10:00\n38      10:15\n39      10:30\n40      08:00\n41      10:30\n42      11:40\n43      12:40\n44      11:30\n45      13:15\n46      13:45\n47      08:30\n48      08:30\n49      07:00\n50      10:10\n51      10:30\n52      07:05\n53      09:02\n54      08:05\n55      13:30\n56      08:30\n57      11:15\n58      11:00\n59      08:00\n60      12:25\n61      10:50\n62      09:43\n63      09:45\n64      10:35\n65      08:30\n66      10:05\n67      09:45\n68      09:00\n69      07:50\n70      08:00\n71      11:00\n72      10:13\n",
        "> ",
        "data <- read.csv('data.csv')",
        "> ",
        "",
        "> ",
        "# est = estimated",
        "> ",
        "new_names = c('timestamp', 'est_time', 'est_distance', 'est_cost', 'est_transport', 'year_group', 'time', 'start_time', 'distance', 'cost', 'transport', 'origin')",
        "> ",
        "colnames(data) <- new_names",
        "> ",
        "data <- data %>% mutate(timestamp = as.Date(timestamp))",
        "> ",
        "data <- data %>% mutate(day = weekdays(timestamp))",
        "> ",
        "",
        "> ",
        "data$est_time <- sub('to', '-', data$est_time)",
        "> ",
        "data$est_time <- sub('half an hour', '30', data$est_time)",
        "> ",
        "hours = c('hours', 'hrs')",
        "> ",
        "data$est_time <- scale_and_avg_range(data$est_time, hours, 60)",
        "> ",
        "data$est_time <- strip_data(data$est_time)",
        "> ",
        "data$est_time <- avg_range(data$est_time)",
        "> ",
        "data <- data %>% mutate(est_time = as.numeric(est_time))",
        "> ",
        "",
        "> ",
        "data$est_distance <- sub('or', '-', data$est_distance)",
        "> ",
        "data$est_distance <- strip_data(data$est_distance)",
        "> ",
        "data$est_distance <- avg_range(data$est_distance)",
        "> ",
        "data <- data %>% mutate(est_distance = as.numeric(est_distance))",
        "Warning message:\n",
        "\u001B[38;5;232mProblem while computing `est_distance = as.numeric(est_distance)`.\n\u001B[36mℹ\u001B[38;5;232m NAs introduced by coercion\u001B[39m \n",
        "> ",
        "",
        "> ",
        "data$est_cost <- sub('/', '-', data$est_cost)",
        "> ",
        "cents = c('cents')",
        "> ",
        "data$est_cost <- scale_data(data$est_cost, cents, 0.01)",
        "> ",
        "data$est_cost <- strip_data(data$est_cost)",
        "> ",
        "data$est_cost <- avg_range(data$est_cost)",
        "> ",
        "data <- data %>% mutate(est_cost = as.numeric(est_cost))",
        "> ",
        "",
        "> ",
        "data$time <- strip_data(data$time)",
        "> ",
        "data <- data %>% mutate(time = as.numeric(time))",
        "> ",
        "",
        "> ",
        "data <- data %>% mutate(start_time = as.POSIXct(start_time, format='%H:%M')",
        "Error: Incomplete expression: \ndata <- data %>% mutate(start_time = as.POSIXct(start_time, format='%H:%M')\n",
        "> ",
        "data <- data %>% mutate(timestamp = as.Date(timestamp))",
        "> ",
        "data <- data %>% mutate(day = weekdays(timestamp))",
        "> ",
        "",
        "> ",
        "data$est_time <- sub('to', '-', data$est_time)",
        "> ",
        "data$est_time <- sub('half an hour', '30', data$est_time)",
        "> ",
        "hours = c('hours', 'hrs')",
        "> ",
        "data$est_time <- scale_and_avg_range(data$est_time, hours, 60)",
        "Error in read.table(text = stripped_rows, sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data$est_time <- strip_data(data$est_time)",
        "> ",
        "data$est_time <- avg_range(data$est_time)",
        "Error in read.table(text = column[cond], sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data <- data %>% mutate(est_time = as.numeric(est_time))",
        "> ",
        "",
        "> ",
        "data$est_distance <- sub('or', '-', data$est_distance)",
        "> ",
        "data$est_distance <- strip_data(data$est_distance)",
        "> ",
        "data$est_distance <- avg_range(data$est_distance)",
        "Error in read.table(text = column[cond], sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data <- data %>% mutate(est_distance = as.numeric(est_distance))",
        "> ",
        "",
        "> ",
        "data$est_cost <- sub('/', '-', data$est_cost)",
        "> ",
        "cents = c('cents')",
        "> ",
        "data$est_cost <- scale_data(data$est_cost, cents, 0.01)",
        "> ",
        "data$est_cost <- strip_data(data$est_cost)",
        "> ",
        "data$est_cost <- avg_range(data$est_cost)",
        "Error in read.table(text = column[cond], sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data <- data %>% mutate(est_cost = as.numeric(est_cost))",
        "> ",
        "",
        "> ",
        "data$time <- strip_data(data$time)",
        "> ",
        "data <- data %>% mutate(time = as.numeric(time))",
        "> ",
        "",
        "> ",
        "data <- data %>% mutate(start_time = as.POSIXct(start_time, format='%H:%M'))",
        "> ",
        "data[8]",
        "            start_time\n1  2022-11-26 12:45:00\n2  2022-11-26 13:40:00\n3  2022-11-26 11:00:00\n4  2022-11-26 02:50:00\n5  2022-11-26 11:45:00\n6  2022-11-26 11:00:00\n7  2022-11-26 12:55:00\n8  2022-11-26 07:35:00\n9  2022-11-26 08:50:00\n10 2022-11-26 07:30:00\n11 2022-11-26 11:00:00\n12 2022-11-26 10:20:00\n13 2022-11-26 14:30:00\n14 2022-11-26 08:50:00\n15 2022-11-26 09:40:00\n16 2022-11-26 11:00:00\n17 2022-11-26 07:50:00\n18 2022-11-26 09:00:00\n19 2022-11-26 09:00:00\n20 2022-11-26 12:30:00\n21 2022-11-26 10:40:00\n22 2022-11-26 09:27:00",
        "\n23 2022-11-26 14:30:00\n24 2022-11-26 10:00:00\n25 2022-11-26 10:15:00\n26 2022-11-26 08:30:00\n27 2022-11-26 08:30:00\n28 2022-11-26 10:45:00\n29 2022-11-26 00:40:00\n30 2022-11-26 10:54:00\n31 2022-11-26 09:00:00\n32 2022-11-26 07:30:00\n33 2022-11-26 10:45:00\n34 2022-11-26 10:30:00\n35 2022-11-26 10:00:00\n36 2022-11-26 10:45:00\n37 2022-11-26 10:00:00\n38 2022-11-26 10:15:00\n39 2022-11-26 10:30:00\n40 2022-11-26 08:00:00\n41 2022-11-26 10:30:00\n42 2022-11-26 11:40:00\n43 2022-11-26 12:40:00\n44 2022-11-26 11:30:00\n45 2022-11-26 13:15:00",
        "\n46 2022-11-26 13:45:00\n47 2022-11-26 08:30:00\n48 2022-11-26 08:30:00\n49 2022-11-26 07:00:00\n50 2022-11-26 10:10:00\n51 2022-11-26 10:30:00\n52 2022-11-26 07:05:00\n53 2022-11-26 09:02:00\n54 2022-11-26 08:05:00\n55 2022-11-26 13:30:00\n56 2022-11-26 08:30:00\n57 2022-11-26 11:15:00\n58 2022-11-26 11:00:00\n59 2022-11-26 08:00:00\n60 2022-11-26 12:25:00\n61 2022-11-26 10:50:00\n62 2022-11-26 09:43:00\n63 2022-11-26 09:45:00\n64 2022-11-26 10:35:00\n65 2022-11-26 08:30:00\n66 2022-11-26 10:05:00\n67 2022-11-26 09:45:00\n68 2022-11-26 09:00:00",
        "\n69 2022-11-26 07:50:00\n70 2022-11-26 08:00:00\n71 2022-11-26 11:00:00\n72 2022-11-26 10:13:00\n",
        "> ",
        "?as.POSIXct",
        "> ",
        "data <- data %>% mutate(timestamp = as.Date(timestamp))",
        "> ",
        "data <- data %>% mutate(day = weekdays(timestamp))",
        "> ",
        "",
        "> ",
        "data$est_time <- sub('to', '-', data$est_time)",
        "> ",
        "data$est_time <- sub('half an hour', '30', data$est_time)",
        "> ",
        "hours = c('hours', 'hrs')",
        "> ",
        "data$est_time <- scale_and_avg_range(data$est_time, hours, 60)",
        "Error in read.table(text = stripped_rows, sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data$est_time <- strip_data(data$est_time)",
        "> ",
        "data$est_time <- avg_range(data$est_time)",
        "Error in read.table(text = column[cond], sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data <- data %>% mutate(est_time = as.numeric(est_time))",
        "> ",
        "",
        "> ",
        "data$est_distance <- sub('or', '-', data$est_distance)",
        "> ",
        "data$est_distance <- strip_data(data$est_distance)",
        "> ",
        "data$est_distance <- avg_range(data$est_distance)",
        "Error in read.table(text = column[cond], sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data <- data %>% mutate(est_distance = as.numeric(est_distance))",
        "> ",
        "",
        "> ",
        "data$est_cost <- sub('/', '-', data$est_cost)",
        "> ",
        "cents = c('cents')",
        "> ",
        "data$est_cost <- scale_data(data$est_cost, cents, 0.01)",
        "> ",
        "data$est_cost <- strip_data(data$est_cost)",
        "> ",
        "data$est_cost <- avg_range(data$est_cost)",
        "Error in read.table(text = column[cond], sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data <- data %>% mutate(est_cost = as.numeric(est_cost))",
        "> ",
        "",
        "> ",
        "data$time <- strip_data(data$time)",
        "> ",
        "data <- data %>% mutate(time = as.numeric(time))",
        "> ",
        "",
        "> ",
        "data <- data %>% mutate(start_time = as.POSIXct(start_time, format='%H:%M', origin = timestamp))",
        "> ",
        "data[8]",
        "            start_time\n1  2022-11-26 12:45:00\n2  2022-11-26 13:40:00\n3  2022-11-26 11:00:00\n4  2022-11-26 02:50:00\n5  2022-11-26 11:45:00\n6  2022-11-26 11:00:00\n7  2022-11-26 12:55:00\n8  2022-11-26 07:35:00\n9  2022-11-26 08:50:00\n10 2022-11-26 07:30:00\n11 2022-11-26 11:00:00\n12 2022-11-26 10:20:00\n13 2022-11-26 14:30:00\n14 2022-11-26 08:50:00\n15 2022-11-26 09:40:00\n16 2022-11-26 11:00:00\n17 2022-11-26 07:50:00\n18 2022-11-26 09:00:00\n19 2022-11-26 09:00:00\n20 2022-11-26 12:30:00\n21 2022-11-26 10:40:00\n22 2022-11-26 09:27:00",
        "\n23 2022-11-26 14:30:00\n24 2022-11-26 10:00:00\n25 2022-11-26 10:15:00\n26 2022-11-26 08:30:00\n27 2022-11-26 08:30:00\n28 2022-11-26 10:45:00\n29 2022-11-26 00:40:00\n30 2022-11-26 10:54:00\n31 2022-11-26 09:00:00\n32 2022-11-26 07:30:00\n33 2022-11-26 10:45:00\n34 2022-11-26 10:30:00\n35 2022-11-26 10:00:00\n36 2022-11-26 10:45:00\n37 2022-11-26 10:00:00\n38 2022-11-26 10:15:00\n39 2022-11-26 10:30:00\n40 2022-11-26 08:00:00\n41 2022-11-26 10:30:00\n42 2022-11-26 11:40:00\n43 2022-11-26 12:40:00\n44 2022-11-26 11:30:00\n45 2022-11-26 13:15:00",
        "\n46 2022-11-26 13:45:00\n47 2022-11-26 08:30:00\n48 2022-11-26 08:30:00\n49 2022-11-26 07:00:00\n50 2022-11-26 10:10:00\n51 2022-11-26 10:30:00\n52 2022-11-26 07:05:00\n53 2022-11-26 09:02:00\n54 2022-11-26 08:05:00\n55 2022-11-26 13:30:00\n56 2022-11-26 08:30:00\n57 2022-11-26 11:15:00\n58 2022-11-26 11:00:00\n59 2022-11-26 08:00:00\n60 2022-11-26 12:25:00\n61 2022-11-26 10:50:00\n62 2022-11-26 09:43:00\n63 2022-11-26 09:45:00\n64 2022-11-26 10:35:00\n65 2022-11-26 08:30:00\n66 2022-11-26 10:05:00\n67 2022-11-26 09:45:00\n68 2022-11-26 09:00:00",
        "\n69 2022-11-26 07:50:00\n70 2022-11-26 08:00:00\n71 2022-11-26 11:00:00\n72 2022-11-26 10:13:00\n",
        "> ",
        "knitr::opts_chunk$set(echo = TRUE)",
        "> ",
        "install.packages(dplyr)",
        "Error in install.packages : object 'dplyr' not found\n",
        "> ",
        "install.stringr",
        "Error: object 'install.stringr' not found\n",
        "> ",
        "library(stringr)",
        "> ",
        "library(dplyr)",
        "> ",
        "data <- read.csv('data.csv')",
        "> ",
        "",
        "> ",
        "# est = estimated",
        "> ",
        "new_names = c('timestamp', 'est_time', 'est_distance', 'est_cost', 'est_transport', 'year_group', 'time', 'start_time', 'distance', 'cost', 'transport', 'origin')",
        "> ",
        "colnames(data) <- new_names",
        "> ",
        "data <- data %>% mutate(timestamp = as.Date(timestamp))",
        "> ",
        "data <- data %>% mutate(day = weekdays(timestamp))",
        "> ",
        "",
        "> ",
        "data$est_time <- sub('to', '-', data$est_time)",
        "> ",
        "data$est_time <- sub('half an hour', '30', data$est_time)",
        "> ",
        "hours = c('hours', 'hrs')",
        "> ",
        "data$est_time <- scale_and_avg_range(data$est_time, hours, 60)",
        "> ",
        "data$est_time <- strip_data(data$est_time)",
        "> ",
        "data$est_time <- avg_range(data$est_time)",
        "> ",
        "data <- data %>% mutate(est_time = as.numeric(est_time))",
        "> ",
        "",
        "> ",
        "data$est_distance <- sub('or', '-', data$est_distance)",
        "> ",
        "data$est_distance <- strip_data(data$est_distance)",
        "> ",
        "data$est_distance <- avg_range(data$est_distance)",
        "> ",
        "data <- data %>% mutate(est_distance = as.numeric(est_distance))",
        "Warning message:\n",
        "\u001B[38;5;232mProblem while computing `est_distance = as.numeric(est_distance)`.\n\u001B[36mℹ\u001B[38;5;232m NAs introduced by coercion\u001B[39m \n",
        "> ",
        "",
        "> ",
        "data$est_cost <- sub('/', '-', data$est_cost)",
        "> ",
        "cents = c('cents')",
        "> ",
        "data$est_cost <- scale_data(data$est_cost, cents, 0.01)",
        "> ",
        "data$est_cost <- strip_data(data$est_cost)",
        "> ",
        "data$est_cost <- avg_range(data$est_cost)",
        "> ",
        "data <- data %>% mutate(est_cost = as.numeric(est_cost))",
        "> ",
        "",
        "> ",
        "data$time <- strip_data(data$time)",
        "> ",
        "data <- data %>% mutate(time = as.numeric(time))",
        "> ",
        "",
        "> ",
        "data <- data %>% mutate(start_time = as.POSIXct(start_time, format='%H:%M', origin = timestamp))",
        "> ",
        "data[8]",
        "            start_time\n1  2022-11-26 12:45:00\n2  2022-11-26 13:40:00\n3  2022-11-26 11:00:00\n4  2022-11-26 02:50:00\n5  2022-11-26 11:45:00\n6  2022-11-26 11:00:00\n7  2022-11-26 12:55:00\n8  2022-11-26 07:35:00\n9  2022-11-26 08:50:00\n10 2022-11-26 07:30:00\n11 2022-11-26 11:00:00\n12 2022-11-26 10:20:00\n13 2022-11-26 14:30:00\n14 2022-11-26 08:50:00\n15 2022-11-26 09:40:00\n16 2022-11-26 11:00:00\n17 2022-11-26 07:50:00\n18 2022-11-26 09:00:00\n19 2022-11-26 09:00:00\n20 2022-11-26 12:30:00\n21 2022-11-26 10:40:00\n22 2022-11-26 09:27:00",
        "\n23 2022-11-26 14:30:00\n24 2022-11-26 10:00:00\n25 2022-11-26 10:15:00\n26 2022-11-26 08:30:00\n27 2022-11-26 08:30:00\n28 2022-11-26 10:45:00\n29 2022-11-26 00:40:00\n30 2022-11-26 10:54:00\n31 2022-11-26 09:00:00\n32 2022-11-26 07:30:00\n33 2022-11-26 10:45:00\n34 2022-11-26 10:30:00\n35 2022-11-26 10:00:00\n36 2022-11-26 10:45:00\n37 2022-11-26 10:00:00\n38 2022-11-26 10:15:00\n39 2022-11-26 10:30:00\n40 2022-11-26 08:00:00\n41 2022-11-26 10:30:00\n42 2022-11-26 11:40:00\n43 2022-11-26 12:40:00\n44 2022-11-26 11:30:00\n45 2022-11-26 13:15:00",
        "\n46 2022-11-26 13:45:00\n47 2022-11-26 08:30:00\n48 2022-11-26 08:30:00\n49 2022-11-26 07:00:00\n50 2022-11-26 10:10:00\n51 2022-11-26 10:30:00\n52 2022-11-26 07:05:00\n53 2022-11-26 09:02:00\n54 2022-11-26 08:05:00\n55 2022-11-26 13:30:00\n56 2022-11-26 08:30:00\n57 2022-11-26 11:15:00\n58 2022-11-26 11:00:00\n59 2022-11-26 08:00:00\n60 2022-11-26 12:25:00\n61 2022-11-26 10:50:00\n62 2022-11-26 09:43:00\n63 2022-11-26 09:45:00\n64 2022-11-26 10:35:00\n65 2022-11-26 08:30:00\n66 2022-11-26 10:05:00\n67 2022-11-26 09:45:00\n68 2022-11-26 09:00:00",
        "\n69 2022-11-26 07:50:00\n70 2022-11-26 08:00:00\n71 2022-11-26 11:00:00\n72 2022-11-26 10:13:00\n",
        "> ",
        "data <- data %>% mutate(timestamp = as.Date(timestamp))",
        "> ",
        "data <- data %>% mutate(day = weekdays(timestamp))",
        "> ",
        "",
        "> ",
        "data$est_time <- sub('to', '-', data$est_time)",
        "> ",
        "data$est_time <- sub('half an hour', '30', data$est_time)",
        "> ",
        "hours = c('hours', 'hrs')",
        "> ",
        "data$est_time <- scale_and_avg_range(data$est_time, hours, 60)",
        "Error in read.table(text = stripped_rows, sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data$est_time <- strip_data(data$est_time)",
        "> ",
        "data$est_time <- avg_range(data$est_time)",
        "Error in read.table(text = column[cond], sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data <- data %>% mutate(est_time = as.numeric(est_time))",
        "> ",
        "",
        "> ",
        "data$est_distance <- sub('or', '-', data$est_distance)",
        "> ",
        "data$est_distance <- strip_data(data$est_distance)",
        "> ",
        "data$est_distance <- avg_range(data$est_distance)",
        "Error in read.table(text = column[cond], sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data <- data %>% mutate(est_distance = as.numeric(est_distance))",
        "> ",
        "",
        "> ",
        "data$est_cost <- sub('/', '-', data$est_cost)",
        "> ",
        "cents = c('cents')",
        "> ",
        "data$est_cost <- scale_data(data$est_cost, cents, 0.01)",
        "> ",
        "data$est_cost <- strip_data(data$est_cost)",
        "> ",
        "data$est_cost <- avg_range(data$est_cost)",
        "Error in read.table(text = column[cond], sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data <- data %>% mutate(est_cost = as.numeric(est_cost))",
        "> ",
        "",
        "> ",
        "data$time <- strip_data(data$time)",
        "> ",
        "data <- data %>% mutate(time = as.numeric(time))",
        "> ",
        "",
        "> ",
        "data <- data %>% mutate(start_time = as.POSIXct(start_time, format='%H:%M', origin = data$timestamp))",
        "> ",
        "data[8]",
        "            start_time\n1  2022-11-26 12:45:00\n2  2022-11-26 13:40:00\n3  2022-11-26 11:00:00\n4  2022-11-26 02:50:00\n5  2022-11-26 11:45:00\n6  2022-11-26 11:00:00\n7  2022-11-26 12:55:00\n8  2022-11-26 07:35:00\n9  2022-11-26 08:50:00\n10 2022-11-26 07:30:00\n11 2022-11-26 11:00:00\n12 2022-11-26 10:20:00\n13 2022-11-26 14:30:00\n14 2022-11-26 08:50:00\n15 2022-11-26 09:40:00\n16 2022-11-26 11:00:00\n17 2022-11-26 07:50:00\n18 2022-11-26 09:00:00\n19 2022-11-26 09:00:00\n20 2022-11-26 12:30:00\n21 2022-11-26 10:40:00\n22 2022-11-26 09:27:00",
        "\n23 2022-11-26 14:30:00\n24 2022-11-26 10:00:00\n25 2022-11-26 10:15:00\n26 2022-11-26 08:30:00\n27 2022-11-26 08:30:00\n28 2022-11-26 10:45:00\n29 2022-11-26 00:40:00\n30 2022-11-26 10:54:00\n31 2022-11-26 09:00:00\n32 2022-11-26 07:30:00\n33 2022-11-26 10:45:00\n34 2022-11-26 10:30:00\n35 2022-11-26 10:00:00\n36 2022-11-26 10:45:00\n37 2022-11-26 10:00:00\n38 2022-11-26 10:15:00\n39 2022-11-26 10:30:00\n40 2022-11-26 08:00:00\n41 2022-11-26 10:30:00\n42 2022-11-26 11:40:00\n43 2022-11-26 12:40:00\n44 2022-11-26 11:30:00\n45 2022-11-26 13:15:00",
        "\n46 2022-11-26 13:45:00\n47 2022-11-26 08:30:00\n48 2022-11-26 08:30:00\n49 2022-11-26 07:00:00\n50 2022-11-26 10:10:00\n51 2022-11-26 10:30:00\n52 2022-11-26 07:05:00\n53 2022-11-26 09:02:00\n54 2022-11-26 08:05:00\n55 2022-11-26 13:30:00\n56 2022-11-26 08:30:00\n57 2022-11-26 11:15:00\n58 2022-11-26 11:00:00\n59 2022-11-26 08:00:00\n60 2022-11-26 12:25:00\n61 2022-11-26 10:50:00\n62 2022-11-26 09:43:00\n63 2022-11-26 09:45:00\n64 2022-11-26 10:35:00\n65 2022-11-26 08:30:00\n66 2022-11-26 10:05:00\n67 2022-11-26 09:45:00\n68 2022-11-26 09:00:00",
        "\n69 2022-11-26 07:50:00\n70 2022-11-26 08:00:00\n71 2022-11-26 11:00:00\n72 2022-11-26 10:13:00\n",
        "> ",
        "data[1, 8]",
        "[1] \"2022-11-26 12:45:00 GMT\"\n",
        "> ",
        "data[1:8]",
        "    timestamp est_time est_distance est_cost est_transport\n1  2022-11-21     30.0          3.0      3.0   Bus / Coach\n2  2022-11-21     15.0         20.0      5.0   Bus / Coach\n3  2022-11-21     30.0         10.0      0.8           Car\n4  2022-11-21     15.0         10.0      3.0          Walk\n5  2022-11-21     15.0          3.0      1.5   Bus / Coach\n6  2022-11-21     20.0         10.0      6.0   Bus / Coach\n7  2022-11-21     30.0          4.0      2.0   Bus / Coach\n8  2022-11-21     35.0          3.5      5.0",
        "          Walk\n9  2022-11-21     30.0          2.5      3.0          Walk\n10 2022-11-21     40.0         15.0      6.0   Bus / Coach\n11 2022-11-21     20.0         15.0      4.0   Bus / Coach\n12 2022-11-21     30.0         15.0      5.0   Bus / Coach\n13 2022-11-21     15.0          3.0      2.0          Walk\n14 2022-11-22     20.0          5.0      6.0          Walk\n15 2022-11-22     40.0          5.0      5.0   Bus / Coach\n16 2022-11-22     20.0          5.0      5.0          Walk\n17 2022-11-22     40.0         10.0",
        "      5.0   Bus / Coach\n18 2022-11-22     30.0          4.0      2.0   Bus / Coach\n19 2022-11-22     15.0          4.0      5.0   Bus / Coach\n20 2022-11-22     15.0          3.5      3.0          Walk\n21 2022-11-22     20.0         18.0     10.0          Walk\n22 2022-11-22     30.0           NA      4.5   Bus / Coach\n23 2022-11-22     20.0          2.0      2.5          Walk\n24 2022-11-22     20.0          1.0      0.0          Walk\n25 2022-11-22     15.0          3.0      2.0          Walk\n26 2022-11-22     40.0",
        "         40.0      7.0   Bus / Coach\n27 2022-11-22     15.0          2.0      5.0          Walk\n28 2022-11-22     25.0         10.0      5.0   Bus / Coach\n29 2022-11-22     30.0         10.0      7.0   Bus / Coach\n30 2022-11-22     20.0          1.5      1.0          Walk\n31 2022-11-22       NA           NA       NA          Walk\n32 2022-11-22     37.5          5.0     10.0   Bus / Coach\n33 2022-11-23     30.0         25.0      5.0          Bike\n34 2022-11-23     20.0          5.0      3.0          Walk\n35 2022-11-23",
        "     30.0         25.0     15.0           Car\n36 2022-11-23     20.0          2.0      3.0          Walk\n37 2022-11-23     60.0         20.0     10.0           Car\n38 2022-11-23     30.0          3.0      5.0          Walk\n39 2022-11-23     15.0          7.0      5.0           Car\n40 2022-11-23     10.0         80.0     25.0          Walk\n41 2022-11-23     20.0         10.0      5.0          Walk\n42 2022-11-23     40.0         10.0      5.0          Walk\n43 2022-11-23     60.0         20.0     10.0          Walk",
        "\n44 2022-11-23     60.0         75.0     12.5           Car\n45 2022-11-23     30.0          5.0      5.0   Bus / Coach\n46 2022-11-23     49.0          5.0      4.0   Bus / Coach\n47 2022-11-23     50.0         15.0      4.0   Bus / Coach\n48 2022-11-23     20.0          3.0      6.0          Walk\n49 2022-11-23     90.0         40.0     10.0   Bus / Coach\n50 2022-11-23      8.5          7.0      6.0   Bus / Coach\n51 2022-11-23     17.5          7.0      5.0          Walk\n52 2022-11-23     25.0          2.0      5.0",
        "          Walk\n53 2022-11-23     25.0         10.0      5.0           Car\n54 2022-11-23     45.0         35.0     10.0   Bus / Coach\n55 2022-11-23     60.0         45.0     10.0   Bus / Coach\n56 2022-11-23    180.0         70.0     12.0   Bus / Coach\n57 2022-11-23     30.0          5.0      3.0          Walk\n58 2022-11-23     30.0          5.0      5.0   Bus / Coach\n59 2022-11-23     20.0          8.0      2.0   Bus / Coach\n60 2022-11-24     30.0          7.0      5.0   Bus / Coach\n61 2022-11-24     20.0          2.0",
        "      1.0          Walk\n62 2022-11-24     25.0         10.0     10.0   Bus / Coach\n63 2022-11-24    180.0         60.0     15.0   Bus / Coach\n64 2022-11-24     30.0         20.0      2.0          Walk\n65 2022-11-24     45.0         20.0     10.0   Bus / Coach\n66 2022-11-24     45.0          4.2      6.0   Bus / Coach\n67 2022-11-24     75.0         45.0      2.0   Bus / Coach\n68 2022-11-24     20.0          2.0     10.0          Walk\n69 2022-11-24     60.0         30.0      6.0          Walk\n70 2022-11-24     45.0",
        "         21.0      7.0          Walk\n71 2022-11-25     60.0         20.0      4.0   Bus / Coach\n72 2022-11-25     20.0          5.0     10.0          Walk\n       year_group time          start_time\n1               4   10 2022-11-26 12:45:00\n2               3   15 2022-11-26 13:40:00\n3               3   25 2022-11-26 11:00:00\n4               3    5 2022-11-26 02:50:00\n5               3   20 2022-11-26 11:45:00\n6               2   10 2022-11-26 11:00:00\n7               4   10 2022-11-26 12:55:00\n8               3",
        "   25 2022-11-26 07:35:00\n9               3    3 2022-11-26 08:50:00\n10              4   40 2022-11-26 07:30:00\n11              4   20 2022-11-26 11:00:00\n12              4   20 2022-11-26 10:20:00\n13              3   25 2022-11-26 14:30:00\n14              4   10 2022-11-26 08:50:00\n15              4   20 2022-11-26 09:40:00\n16              4   20 2022-11-26 11:00:00\n17              4   80 2022-11-26 07:50:00\n18       Master's   30 2022-11-26 09:00:00\n19              4   25 2022-11-26 09:00:00\n20              4",
        "    6 2022-11-26 12:30:00\n21              4    5 2022-11-26 10:40:00\n22              3    3 2022-11-26 09:27:00\n23              3   15 2022-11-26 14:30:00\n24              4   10 2022-11-26 10:00:00\n25              4   10 2022-11-26 10:15:00\n26              3   30 2022-11-26 08:30:00\n27              2   15 2022-11-26 08:30:00\n28              3    8 2022-11-26 10:45:00\n29              3   15 2022-11-26 00:40:00\n30              4    5 2022-11-26 10:54:00\n31              3   10 2022-11-26 09:00:00\n32              1",
        "   30 2022-11-26 07:30:00\n33              3   15 2022-11-26 10:45:00\n34              3   30 2022-11-26 10:30:00\n35              3   15 2022-11-26 10:00:00\n36              2   15 2022-11-26 10:45:00\n37              4   40 2022-11-26 10:00:00\n38              4   20 2022-11-26 10:15:00\n39              4   20 2022-11-26 10:30:00\n40              4   80 2022-11-26 08:00:00\n41              3   15 2022-11-26 10:30:00\n42              3   10 2022-11-26 11:40:00\n43              3   25 2022-11-26 12:40:00\n44              4",
        "   40 2022-11-26 11:30:00\n45              3   10 2022-11-26 13:15:00\n46              3    4 2022-11-26 13:45:00\n47              4   60 2022-11-26 08:30:00\n48 Higher Diploma   15 2022-11-26 08:30:00\n49              4   60 2022-11-26 07:00:00\n50              3   12 2022-11-26 10:10:00\n51              4   35 2022-11-26 10:30:00\n52              3  140 2022-11-26 07:05:00\n53              4   10 2022-11-26 09:02:00\n54              4   60 2022-11-26 08:05:00\n55 Higher Diploma   20 2022-11-26 13:30:00\n56              3",
        "   95 2022-11-26 08:30:00\n57              3   15 2022-11-26 11:15:00\n58              3   10 2022-11-26 11:00:00\n59              4   15 2022-11-26 08:00:00\n60              4   60 2022-11-26 12:25:00\n61              4    5 2022-11-26 10:50:00\n62              3   10 2022-11-26 09:43:00\n63              4   20 2022-11-26 09:45:00\n64              2   15 2022-11-26 10:35:00\n65              2   25 2022-11-26 08:30:00\n66       Master's   30 2022-11-26 10:05:00\n67              4   14 2022-11-26 09:45:00\n68              4",
        "   10 2022-11-26 09:00:00\n69              4   65 2022-11-26 07:50:00\n70              4   20 2022-11-26 08:00:00\n71              4   50 2022-11-26 11:00:00\n72       Master's   22 2022-11-26 10:13:00\n",
        "> ",
        "data <- data %>% mutate(timestamp = as.Date(timestamp))",
        "> ",
        "data <- data %>% mutate(day = weekdays(timestamp))",
        "> ",
        "",
        "> ",
        "data$est_time <- sub('to', '-', data$est_time)",
        "> ",
        "data$est_time <- sub('half an hour', '30', data$est_time)",
        "> ",
        "hours = c('hours', 'hrs')",
        "> ",
        "data$est_time <- scale_and_avg_range(data$est_time, hours, 60)",
        "Error in read.table(text = stripped_rows, sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data$est_time <- strip_data(data$est_time)",
        "> ",
        "data$est_time <- avg_range(data$est_time)",
        "Error in read.table(text = column[cond], sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data <- data %>% mutate(est_time = as.numeric(est_time))",
        "> ",
        "",
        "> ",
        "data$est_distance <- sub('or', '-', data$est_distance)",
        "> ",
        "data$est_distance <- strip_data(data$est_distance)",
        "> ",
        "data$est_distance <- avg_range(data$est_distance)",
        "Error in read.table(text = column[cond], sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data <- data %>% mutate(est_distance = as.numeric(est_distance))",
        "> ",
        "",
        "> ",
        "data$est_cost <- sub('/', '-', data$est_cost)",
        "> ",
        "cents = c('cents')",
        "> ",
        "data$est_cost <- scale_data(data$est_cost, cents, 0.01)",
        "> ",
        "data$est_cost <- strip_data(data$est_cost)",
        "> ",
        "data$est_cost <- avg_range(data$est_cost)",
        "Error in read.table(text = column[cond], sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data <- data %>% mutate(est_cost = as.numeric(est_cost))",
        "> ",
        "",
        "> ",
        "data$time <- strip_data(data$time)",
        "> ",
        "data <- data %>% mutate(time = as.numeric(time))",
        "> ",
        "",
        "> ",
        "# data <- data %>% mutate(start_time = as.POSIXct(start_time, format='%H:%M', origin = data$timestamp))",
        "> ",
        "data%start_time <- paste(data$timestamp, data$start_time)",
        "Error: unexpected input in \"data%start_time <- paste(data$timestamp, data$start_time)\"\n",
        "> ",
        "data <- data %>% mutate(timestamp = as.Date(timestamp))",
        "> ",
        "data <- data %>% mutate(day = weekdays(timestamp))",
        "> ",
        "",
        "> ",
        "data$est_time <- sub('to', '-', data$est_time)",
        "> ",
        "data$est_time <- sub('half an hour', '30', data$est_time)",
        "> ",
        "hours = c('hours', 'hrs')",
        "> ",
        "data$est_time <- scale_and_avg_range(data$est_time, hours, 60)",
        "Error in read.table(text = stripped_rows, sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data$est_time <- strip_data(data$est_time)",
        "> ",
        "data$est_time <- avg_range(data$est_time)",
        "Error in read.table(text = column[cond], sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data <- data %>% mutate(est_time = as.numeric(est_time))",
        "> ",
        "",
        "> ",
        "data$est_distance <- sub('or', '-', data$est_distance)",
        "> ",
        "data$est_distance <- strip_data(data$est_distance)",
        "> ",
        "data$est_distance <- avg_range(data$est_distance)",
        "Error in read.table(text = column[cond], sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data <- data %>% mutate(est_distance = as.numeric(est_distance))",
        "> ",
        "",
        "> ",
        "data$est_cost <- sub('/', '-', data$est_cost)",
        "> ",
        "cents = c('cents')",
        "> ",
        "data$est_cost <- scale_data(data$est_cost, cents, 0.01)",
        "> ",
        "data$est_cost <- strip_data(data$est_cost)",
        "> ",
        "data$est_cost <- avg_range(data$est_cost)",
        "Error in read.table(text = column[cond], sep = \"-\", header = FALSE) : \n  no lines available in input\n",
        "> ",
        "data <- data %>% mutate(est_cost = as.numeric(est_cost))",
        "> ",
        "",
        "> ",
        "data$time <- strip_data(data$time)",
        "> ",
        "data <- data %>% mutate(time = as.numeric(time))",
        "> ",
        "",
        "> ",
        "# data <- data %>% mutate(start_time = as.POSIXct(start_time, format='%H:%M', origin = data$timestamp))",
        "> ",
        "data%start_time <- paste(as.character(asdata$timestamp), data$start_time)",
        "Error: unexpected input in \"data%start_time <- paste(as.character(asdata$timestamp), data$start_time)\"\n",
        "> ",
        "data[8]",
        "            start_time\n1  2022-11-26 12:45:00\n2  2022-11-26 13:40:00\n3  2022-11-26 11:00:00\n4  2022-11-26 02:50:00\n5  2022-11-26 11:45:00\n6  2022-11-26 11:00:00\n7  2022-11-26 12:55:00\n8  2022-11-26 07:35:00\n9  2022-11-26 08:50:00\n10 2022-11-26 07:30:00\n11 2022-11-26 11:00:00\n12 2022-11-26 10:20:00\n13 2022-11-26 14:30:00\n14 2022-11-26 08:50:00\n15 2022-11-26 09:40:00\n16 2022-11-26 11:00:00\n17 2022-11-26 07:50:00\n18 2022-11-26 09:00:00\n19 2022-11-26 09:00:00\n20 2022-11-26 12:30:00\n21 2022-11-26 10:40:00\n22 2022-11-26 09:27:00",
        "\n23 2022-11-26 14:30:00\n24 2022-11-26 10:00:00\n25 2022-11-26 10:15:00\n26 2022-11-26 08:30:00\n27 2022-11-26 08:30:00\n28 2022-11-26 10:45:00\n29 2022-11-26 00:40:00\n30 2022-11-26 10:54:00\n31 2022-11-26 09:00:00\n32 2022-11-26 07:30:00\n33 2022-11-26 10:45:00\n34 2022-11-26 10:30:00\n35 2022-11-26 10:00:00\n36 2022-11-26 10:45:00\n37 2022-11-26 10:00:00\n38 2022-11-26 10:15:00\n39 2022-11-26 10:30:00\n40 2022-11-26 08:00:00\n41 2022-11-26 10:30:00\n42 2022-11-26 11:40:00\n43 2022-11-26 12:40:00\n44 2022-11-26 11:30:00\n45 2022-11-26 13:15:00",
        "\n46 2022-11-26 13:45:00\n47 2022-11-26 08:30:00\n48 2022-11-26 08:30:00\n49 2022-11-26 07:00:00\n50 2022-11-26 10:10:00\n51 2022-11-26 10:30:00\n52 2022-11-26 07:05:00\n53 2022-11-26 09:02:00\n54 2022-11-26 08:05:00\n55 2022-11-26 13:30:00\n56 2022-11-26 08:30:00\n57 2022-11-26 11:15:00\n58 2022-11-26 11:00:00\n59 2022-11-26 08:00:00\n60 2022-11-26 12:25:00\n61 2022-11-26 10:50:00\n62 2022-11-26 09:43:00\n63 2022-11-26 09:45:00\n64 2022-11-26 10:35:00\n65 2022-11-26 08:30:00\n66 2022-11-26 10:05:00\n67 2022-11-26 09:45:00\n68 2022-11-26 09:00:00",
        "\n69 2022-11-26 07:50:00\n70 2022-11-26 08:00:00\n71 2022-11-26 11:00:00\n72 2022-11-26 10:13:00\n",
        "> ",
        "data <- read.csv('data.csv')",
        "> ",
        "",
        "> ",
        "# est = estimated",
        "> ",
        "new_names = c('timestamp', 'est_time', 'est_distance', 'est_cost', 'est_transport', 'year_group', 'time', 'start_time', 'distance', 'cost', 'transport', 'origin')",
        "> ",
        "colnames(data) <- new_names",
        "> ",
        "data <- data %>% mutate(timestamp = as.Date(timestamp))",
        "> ",
        "data <- data %>% mutate(day = weekdays(timestamp))",
        "> ",
        "",
        "> ",
        "data$est_time <- sub('to', '-', data$est_time)",
        "> ",
        "data$est_time <- sub('half an hour', '30', data$est_time)",
        "> ",
        "hours = c('hours', 'hrs')",
        "> ",
        "data$est_time <- scale_and_avg_range(data$est_time, hours, 60)",
        "> ",
        "data$est_time <- strip_data(data$est_time)",
        "> ",
        "data$est_time <- avg_range(data$est_time)",
        "> ",
        "data <- data %>% mutate(est_time = as.numeric(est_time))",
        "> ",
        "",
        "> ",
        "data$est_distance <- sub('or', '-', data$est_distance)",
        "> ",
        "data$est_distance <- strip_data(data$est_distance)",
        "> ",
        "data$est_distance <- avg_range(data$est_distance)",
        "> ",
        "data <- data %>% mutate(est_distance = as.numeric(est_distance))",
        "Warning message:\n",
        "\u001B[38;5;232mProblem while computing `est_distance = as.numeric(est_distance)`.\n\u001B[36mℹ\u001B[38;5;232m NAs introduced by coercion\u001B[39m \n",
        "> ",
        "",
        "> ",
        "data$est_cost <- sub('/', '-', data$est_cost)",
        "> ",
        "cents = c('cents')",
        "> ",
        "data$est_cost <- scale_data(data$est_cost, cents, 0.01)",
        "> ",
        "data$est_cost <- strip_data(data$est_cost)",
        "> ",
        "data$est_cost <- avg_range(data$est_cost)",
        "> ",
        "data <- data %>% mutate(est_cost = as.numeric(est_cost))",
        "> ",
        "",
        "> ",
        "data$time <- strip_data(data$time)",
        "> ",
        "data <- data %>% mutate(time = as.numeric(time))",
        "> ",
        "",
        "> ",
        "# data <- data %>% mutate(start_time = as.POSIXct(start_time, format='%H:%M', origin = data$timestamp))",
        "> ",
        "data%start_time <- paste(as.character(asdata$timestamp), data$start_time)",
        "Error: unexpected input in \"data%start_time <- paste(as.character(asdata$timestamp), data$start_time)\"\n",
        "> ",
        "data[8]",
        "   start_time\n1       12:45\n2       13:40\n3       11:00\n4       02:50\n5       11:45\n6       11:00\n7       12:55\n8       07:35\n9       08:50\n10      07:30\n11      11:00\n12      10:20\n13      14:30\n14      08:50\n15      09:40\n16      11:00\n17      07:50\n18      09:00\n19      09:00\n20      12:30\n21      10:40\n22      09:27\n23      14:30\n24      10:00\n25      10:15\n26      08:30\n27      08:30\n28      10:45\n29      00:40\n30      10:54\n31      09:00\n32      07:30\n33      10:45\n34      10:30\n35      10:00\n36      10:45",
        "\n37      10:00\n38      10:15\n39      10:30\n40      08:00\n41      10:30\n42      11:40\n43      12:40\n44      11:30\n45      13:15\n46      13:45\n47      08:30\n48      08:30\n49      07:00\n50      10:10\n51      10:30\n52      07:05\n53      09:02\n54      08:05\n55      13:30\n56      08:30\n57      11:15\n58      11:00\n59      08:00\n60      12:25\n61      10:50\n62      09:43\n63      09:45\n64      10:35\n65      08:30\n66      10:05\n67      09:45\n68      09:00\n69      07:50\n70      08:00\n71      11:00\n72      10:13\n",
        "> ",
        "knitr::opts_chunk$set(echo = TRUE)",
        "> ",
        "install.packages(dplyr)",
        "Error in install.packages : object 'dplyr' not found\n",
        "> ",
        "install.stringr",
        "Error: object 'install.stringr' not found\n",
        "> ",
        "install.M3",
        "Error: object 'install.M3' not found\n",
        "> ",
        "library(stringr)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(M3)",
        "Error in library(M3) : there is no package called ‘M3’\n",
        "> ",
        "knitr::opts_chunk$set(echo = TRUE)",
        "> ",
        "install.packages(dplyr)",
        "Error in install.packages : object 'dplyr' not found\n",
        "> ",
        "install.stringr",
        "Error: object 'install.stringr' not found\n",
        "> ",
        "install.M3",
        "Error: object 'install.M3' not found\n",
        "> ",
        "library(stringr)",
        "> ",
        "library(dplyr)",
        "> ",
        "library('M3')",
        "Error in library(\"M3\") : there is no package called ‘M3’\n",
        "> ",
        "knitr::opts_chunk$set(echo = TRUE)",
        "> ",
        "install.packages('dplyr')",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages('stringr')",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages('M3')",
        "WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\n",
        "Installing package into ‘C:/Users/fionn/AppData/Local/R/win-library/4.2’\n(as ‘lib’ is unspecified)\n",
        "Warning in install.packages :\n  package ‘M3’ is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n",
        "> ",
        "library(stringr)",
        "> ",
        "library(dplyr)",
        "> ",
        "library('M3')",
        "Error in library(\"M3\") : there is no package called ‘M3’\n",
        "\nRestarting R session...\n\n"
    ]
}